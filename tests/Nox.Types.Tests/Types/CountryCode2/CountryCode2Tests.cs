namespace Nox.Types.Tests.Types;

public class CountryCode2Tests
{
    [InlineData("AF")]
    [InlineData("AX")]
    [InlineData("AL")]
    [InlineData("DZ")]
    [InlineData("AS")]
    [InlineData("AD")]
    [InlineData("AO")]
    [InlineData("AI")]
    [InlineData("AQ")]
    [InlineData("AG")]
    [InlineData("AR")]
    [InlineData("AM")]
    [InlineData("AW")]
    [InlineData("AU")]
    [InlineData("AT")]
    [InlineData("AZ")]
    [InlineData("BS")]
    [InlineData("BH")]
    [InlineData("BD")]
    [InlineData("BB")]
    [InlineData("BY")]
    [InlineData("BE")]
    [InlineData("BZ")]
    [InlineData("BJ")]
    [InlineData("BM")]
    [InlineData("BT")]
    [InlineData("BO")]
    [InlineData("BA")]
    [InlineData("BW")]
    [InlineData("BV")]
    [InlineData("BR")]
    [InlineData("VG")]
    [InlineData("IO")]
    [InlineData("BN")]
    [InlineData("BG")]
    [InlineData("BF")]
    [InlineData("BI")]
    [InlineData("KH")]
    [InlineData("CM")]
    [InlineData("CA")]
    [InlineData("CV")]
    [InlineData("KY")]
    [InlineData("CF")]
    [InlineData("TD")]
    [InlineData("CL")]
    [InlineData("CN")]
    [InlineData("HK")]
    [InlineData("MO")]
    [InlineData("CX")]
    [InlineData("CC")]
    [InlineData("CO")]
    [InlineData("KM")]
    [InlineData("CG")]
    [InlineData("CD")]
    [InlineData("CK")]
    [InlineData("CR")]
    [InlineData("CI")]
    [InlineData("HR")]
    [InlineData("CU")]
    [InlineData("CY")]
    [InlineData("CZ")]
    [InlineData("DK")]
    [InlineData("DJ")]
    [InlineData("DM")]
    [InlineData("DO")]
    [InlineData("EC")]
    [InlineData("EG")]
    [InlineData("SV")]
    [InlineData("GQ")]
    [InlineData("ER")]
    [InlineData("EE")]
    [InlineData("ET")]
    [InlineData("FK")]
    [InlineData("FO")]
    [InlineData("FJ")]
    [InlineData("FI")]
    [InlineData("FR")]
    [InlineData("GF")]
    [InlineData("PF")]
    [InlineData("TF")]
    [InlineData("GA")]
    [InlineData("GM")]
    [InlineData("GE")]
    [InlineData("DE")]
    [InlineData("GH")]
    [InlineData("GI")]
    [InlineData("GR")]
    [InlineData("GL")]
    [InlineData("GD")]
    [InlineData("GP")]
    [InlineData("GU")]
    [InlineData("GT")]
    [InlineData("GG")]
    [InlineData("GN")]
    [InlineData("GW")]
    [InlineData("GY")]
    [InlineData("HT")]
    [InlineData("HM")]
    [InlineData("VA")]
    [InlineData("HN")]
    [InlineData("HU")]
    [InlineData("IS")]
    [InlineData("IN")]
    [InlineData("ID")]
    [InlineData("IR")]
    [InlineData("IQ")]
    [InlineData("IE")]
    [InlineData("IM")]
    [InlineData("IL")]
    [InlineData("IT")]
    [InlineData("JM")]
    [InlineData("JP")]
    [InlineData("JE")]
    [InlineData("JO")]
    [InlineData("KZ")]
    [InlineData("KE")]
    [InlineData("KI")]
    [InlineData("KP")]
    [InlineData("KR")]
    [InlineData("KW")]
    [InlineData("KG")]
    [InlineData("LA")]
    [InlineData("LV")]
    [InlineData("LB")]
    [InlineData("LS")]
    [InlineData("LR")]
    [InlineData("LY")]
    [InlineData("LI")]
    [InlineData("LT")]
    [InlineData("LU")]
    [InlineData("MK")]
    [InlineData("MG")]
    [InlineData("MW")]
    [InlineData("MY")]
    [InlineData("MV")]
    [InlineData("ML")]
    [InlineData("MT")]
    [InlineData("MH")]
    [InlineData("MQ")]
    [InlineData("MR")]
    [InlineData("MU")]
    [InlineData("YT")]
    [InlineData("MX")]
    [InlineData("FM")]
    [InlineData("MD")]
    [InlineData("MC")]
    [InlineData("MN")]
    [InlineData("ME")]
    [InlineData("MS")]
    [InlineData("MA")]
    [InlineData("MZ")]
    [InlineData("MM")]
    [InlineData("NA")]
    [InlineData("NR")]
    [InlineData("NP")]
    [InlineData("NL")]
    [InlineData("AN")]
    [InlineData("NC")]
    [InlineData("NZ")]
    [InlineData("NI")]
    [InlineData("NE")]
    [InlineData("NG")]
    [InlineData("NU")]
    [InlineData("NF")]
    [InlineData("MP")]
    [InlineData("NO")]
    [InlineData("OM")]
    [InlineData("PK")]
    [InlineData("PW")]
    [InlineData("PS")]
    [InlineData("PA")]
    [InlineData("PG")]
    [InlineData("PY")]
    [InlineData("PE")]
    [InlineData("PH")]
    [InlineData("PN")]
    [InlineData("PL")]
    [InlineData("PT")]
    [InlineData("PR")]
    [InlineData("QA")]
    [InlineData("RE")]
    [InlineData("RO")]
    [InlineData("RU")]
    [InlineData("RW")]
    [InlineData("BL")]
    [InlineData("SH")]
    [InlineData("KN")]
    [InlineData("LC")]
    [InlineData("MF")]
    [InlineData("PM")]
    [InlineData("VC")]
    [InlineData("WS")]
    [InlineData("SM")]
    [InlineData("ST")]
    [InlineData("SA")]
    [InlineData("SN")]
    [InlineData("RS")]
    [InlineData("SC")]
    [InlineData("SL")]
    [InlineData("SG")]
    [InlineData("SK")]
    [InlineData("SI")]
    [InlineData("SB")]
    [InlineData("SO")]
    [InlineData("ZA")]
    [InlineData("GS")]
    [InlineData("SS")]
    [InlineData("ES")]
    [InlineData("LK")]
    [InlineData("SD")]
    [InlineData("SR")]
    [InlineData("SJ")]
    [InlineData("SZ")]
    [InlineData("SE")]
    [InlineData("CH")]
    [InlineData("SY")]
    [InlineData("TW")]
    [InlineData("TJ")]
    [InlineData("TZ")]
    [InlineData("TH")]
    [InlineData("TL")]
    [InlineData("TG")]
    [InlineData("TK")]
    [InlineData("TO")]
    [InlineData("TT")]
    [InlineData("TN")]
    [InlineData("TR")]
    [InlineData("TM")]
    [InlineData("TC")]
    [InlineData("TV")]
    [InlineData("UG")]
    [InlineData("UA")]
    [InlineData("AE")]
    [InlineData("GB")]
    [InlineData("US")]
    [InlineData("UM")]
    [InlineData("UY")]
    [InlineData("UZ")]
    [InlineData("VU")]
    [InlineData("VE")]
    [InlineData("VN")]
    [InlineData("VI")]
    [InlineData("WF")]
    [InlineData("EH")]
    [InlineData("YE")]
    [InlineData("ZM")]
    [InlineData("ZW")]
    [Theory]
    public void Nox_CountryCode2_Constructor_ReturnsSameValue_AllCountries(string countryCode2String)
    {
        var countryCode2 = CountryCode2.From(countryCode2String);

        Assert.Equal(countryCode2String, countryCode2.Value);
    }

    [Fact]
    public void Nox_CountryCode2_Constructor_WithUnsupportedCountryCode2_ThrowsValidationException()
    {
        var exception = Assert.Throws<TypeValidationException>(() => _ =
          CountryCode2.From("ABC")
        );

        Assert.Equal("Could not create a Nox CountryCode2 type with unsupported value 'ABC'.", exception.Errors.First().ErrorMessage);
    }

    [Fact]
    public void Nox_CountryCode2_Equality_Tests()
    {
        var countryCode2_1 = CountryCode2.From("AF");

        var countryCode2_2 = CountryCode2.From("AF");

        Assert.Equal(countryCode2_1, countryCode2_2);
    }

    [Fact]
    public void Nox_CountryCode2_NotEqual_Tests()
    {
        var countryCode2_1 = CountryCode2.From("AF");

        var countryCode2_2 = CountryCode2.From("AX");

        Assert.NotEqual(countryCode2_1, countryCode2_2);
    }

    [Fact]
    public void Nox_CountryCide2_ToString_ReturnsString()
    {
        var countryCode2 = CountryCode2.From("AF");

        Assert.Equal("AF", countryCode2.ToString());
    }
}
